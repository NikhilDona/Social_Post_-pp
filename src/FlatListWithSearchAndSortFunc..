import React, { createContext, useEffect, useRef, useState } from "react";
import { View, Text, TextInput, Image, FlatList, Modal, TouchableOpacity } from "react-native";
import { TouchableWithoutFeedback } from "react-native-gesture-handler";

function Home() {

    const [data, setData] = useState([])
    const [oldData, setOldData] = useState([])
    const [nik, setNik] = useState('')
    const [modalVisible, setModalVisible] = useState(false);

    const searchRef = useRef();

    useEffect(() => {
        fetch('https://fakestoreapi.com/products')
            .then(res => res.json())
            .then(response => {
                console.log(response)
                setData(response)
                setOldData(response)
            })
    }, [])


    const onSearch = text => {

        if (text == '') {
            setData(oldData)
        }
        else {
            let tempList = data.filter(item => {
                return item.title.toLowerCase().indexOf(text.toLowerCase()) > -1;
            })
            setData(tempList)
        }
    }

    const sortByName = () => {
        let tempList = data.sort((a, b) =>
            a.title > b.title ? 1 : -1,
        )
        setData(tempList)
        searchRef.current.scrollToIndex({animated:true,index:0})
        setModalVisible(false)

    }

    // const sortByHighToLow = () => {
    //     let tempList = data.sort((a,b) => a.price - b.price ? 1 : -1 )
    //     setData(tempList)
    //     setModalVisible(false)
    // }

    return (
        <View style={{ flex: 1 }}>
            <View style={{ justifyContent: "center" }}>
                <TextInput
                    style={{ width: "80%", height: 50, borderRadius: 10, marginRight: 20, fontSize: 18, color: "black", borderWidth: 1, paddingLeft: 40, alignSelf: "center", marginTop: 20, borderColor: "gray" }}
                    placeholder={"Search item here"}
                    placeholderTextColor={"gray"}
                    value={nik}
                    onChangeText={(val) => { setNik(val), onSearch(val) }}
                >
                </TextInput>

                <Image
                    source={require('../search.png')}
                    style={{ height: 25, width: 25, marginLeft: 10, position: "absolute", left: 30, top: 33 }}
                />
                <TouchableOpacity style={{ position: "absolute", right: 10, top: 30 }} onPress={() => setModalVisible(true)}>
                    <Image
                        source={require('../filter.png')}
                        style={{ height: 35, width: 35, }}
                    />
                </TouchableOpacity>
            </View>
            <FlatList
                data={data}
                style={{ margin: 10 }}
                ref={searchRef}
                showsVerticalScrollIndicator={false}
                renderItem={({ item, index }) => {
                    return (
                        <View style={{ marginTop: 10, alignSelf: "center", flexDirection: "row", justifyContent: "center", borderColor: "gray", borderRadius: 20, borderWidth: 1 }}>
                            <View style={{ justifyContent: "center", paddingBottom: 15, paddingTop: 10 }}>
                                <Image
                                    source={{ uri: item.image }}
                                    style={{ height: 70, borderRadius: 10, width: 70, marginLeft: 10, }}
                                />
                            </View>
                            <View style={{ width: 250, paddingBottom: 15, paddingTop: 10, marginLeft: 20 }}>
                                <Text style={{ fontSize: 15 }}>{item.title.substring(0, 30)}</Text>
                                <Text style={{ fontSize: 13, marginTop: 5 }}>{item.description.substring(0, 50)}</Text>
                                <View style={{ flexDirection: "row", justifyContent: "space-between" }}>
                                    <Text style={{ color: "green" }}> $ {item.price}</Text>
                                    <Text style={{ color: "blue", marginRight: 60 }}>{item.rating.rate}</Text>
                                </View>
                            </View>
                        </View>
                    )
                }}
            />

            <Modal
                visible={modalVisible}
                animationType='slide'
                transparent={true}
                onRequestClose={() => {

                    setModalVisible(false)
                }}

            >
                <View style={{ backgroundColor: "gray", width: 300, alignSelf: "center", marginTop: 300, borderRadius: 30 }}>

                    <TouchableOpacity onPress={() => sortByName()}>

                        <Text style={{ color: "#fff", marginLeft: 20, fontSize: 18, marginTop: 10, marginBottom: 10 }}>SORT BY NAME</Text>

                    </TouchableOpacity>
                    <View style={{ borderWidth: 0.5, borderColor: "#fff", backgroundColor: "#fff" }} />
                    <TouchableOpacity
                        onPress={() => {
                            setData(data.sort((a, b) => a.price - b.price))
                            searchRef.current.scrollToIndex({animated:true,index:0})
                            setModalVisible(false)

                        }}
                    >

                        <Text style={{ color: "#fff", marginLeft: 20, fontSize: 18, marginTop: 10, marginBottom: 10 }}>LOW TO HIGH PRICE</Text>

                    </TouchableOpacity>
                    <View style={{ borderWidth: 0.5, borderColor: "#fff", backgroundColor: "#fff" }} />
                    <TouchableOpacity onPress={() => {
                        setData(data.sort((a, b) => b.price - a.price))
                        searchRef.current.scrollToIndex({animated:true,index:0})
                        setModalVisible(false)

                    }}>

                        <Text style={{ color: "#fff", marginLeft: 20, fontSize: 18, marginTop: 10, marginBottom: 10 }}>HIGH TO LOW PRICE</Text>

                    </TouchableOpacity>
                    <View style={{ borderWidth: 0.5, borderColor: "#fff", backgroundColor: "#fff" }} />
                    <TouchableOpacity onPress={() => {
                        setData(data.sort((a, b) => b.rating.rate - a.rating.rate))
                        searchRef.current.scrollToIndex({animated:true,index:0})
                        setModalVisible(false)

                    }}>

                        <Text style={{ color: "#fff", marginLeft: 20, fontSize: 18, marginTop: 10, marginBottom: 10 }}>SORT BY RATING</Text>

                    </TouchableOpacity>


                </View>
            </Modal >
        </View >
    );
}

export default Home;
